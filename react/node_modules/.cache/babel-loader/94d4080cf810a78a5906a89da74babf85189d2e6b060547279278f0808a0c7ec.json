{"ast":null,"code":"import React,{useEffect}from\"react\";import\"./App.css\";import{ProductCard}from\"./ProductCard\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AddProduct=()=>{const[products,setProducts]=React.useState([]);const[labels,setLabels]=React.useState([]);const[selectedLabels,setSelectedLabels]=React.useState([]);function handleLabelClick(label){// first check if the label is already selected\nconst isSelected=selectedLabels.some(selectedLabel=>{return selectedLabel.name===label.name;});if(isSelected){// if it is selected, remove it from the selected labels\nsetSelectedLabels(prev=>prev.filter(selectedLabel=>selectedLabel.name!==label.name));}else{// if it is not selected, add it to the selected labels\nsetSelectedLabels(prev=>[...prev,label]);}}async function fetchProducts(){console.log(\"Selected labels:\",selectedLabels);let url=\"https://7kat3yi6ui.execute-api.eu-west-1.amazonaws.com/products\";if(selectedLabels.length>0){const selectedLabelNames=selectedLabels.map(label=>label.name);url+=\"?labels=\".concat(selectedLabelNames.join(\",\"));}await fetch(url,{method:\"GET\",headers:{\"Content-Type\":\"application/json\",mode:\"cors\"}}).then(async response=>{if(response.ok){const data=await response.json();setProducts(data);console.log(\"Products fetched successfully:\",data);}else{alert(\"Error fetching products\");}}).catch(error=>{console.error(\"Error:\",error);alert(\"Error fetching products\");});}async function fetchLabels(){await fetch(\"https://7kat3yi6ui.execute-api.eu-west-1.amazonaws.com/labels\",{method:\"GET\",headers:{\"Content-Type\":\"application/json\",mode:\"cors\"}}).then(async response=>{if(response.ok){const data=await response.json();setLabels(data);console.log(\"Labels fetched successfully:\",data);}else{alert(\"Error fetching labels\");}}).catch(error=>{console.error(\"Error:\",error);alert(\"Error fetching labels\");});}useEffect(()=>{fetchProducts();fetchLabels();},[]);useEffect(()=>{fetchProducts();},[selectedLabels]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"View Products\"}),/*#__PURE__*/_jsx(\"div\",{className:\"labels-container\",children:labels.map(label=>{const isSelected=selectedLabels.some(selectedLabel=>selectedLabel.name===label.name);return/*#__PURE__*/_jsx(\"div\",{className:\"label\".concat(isSelected?\" selected\":\"\"),onClick:()=>handleLabelClick(label),children:label.name});})}),/*#__PURE__*/_jsx(\"div\",{className:\"products-container\",children:products.map(product=>/*#__PURE__*/_jsx(ProductCard,{product:product},product.id))})]});};export default AddProduct;","map":{"version":3,"names":["React","useEffect","ProductCard","jsx","_jsx","jsxs","_jsxs","AddProduct","products","setProducts","useState","labels","setLabels","selectedLabels","setSelectedLabels","handleLabelClick","label","isSelected","some","selectedLabel","name","prev","filter","fetchProducts","console","log","url","length","selectedLabelNames","map","concat","join","fetch","method","headers","mode","then","response","ok","data","json","alert","catch","error","fetchLabels","children","className","onClick","product","id"],"sources":["/Users/jakobmerten/uni/it_infrastruktur/it_infrastruktur_frontend/src/ViewProducts.tsx"],"sourcesContent":["import React, { use, useEffect } from \"react\";\nimport \"./App.css\";\nimport { ProductCard } from \"./ProductCard\";\n\nexport type Product = {\n  id: string;\n  name: string;\n  description: string;\n  price: number;\n};\n\ntype Label = {\n  name: string;\n};\n\nconst AddProduct: React.FC = () => {\n  const [products, setProducts] = React.useState<Product[]>([]);\n  const [labels, setLabels] = React.useState<Label[]>([]);\n  const [selectedLabels, setSelectedLabels] = React.useState<Label[]>([]);\n\n  function handleLabelClick(label: Label) {\n    // first check if the label is already selected\n    const isSelected = selectedLabels.some((selectedLabel) => {\n      return selectedLabel.name === label.name;\n    });\n    if (isSelected) {\n      // if it is selected, remove it from the selected labels\n      setSelectedLabels((prev) =>\n        prev.filter((selectedLabel) => selectedLabel.name !== label.name)\n      );\n    } else {\n      // if it is not selected, add it to the selected labels\n      setSelectedLabels((prev) => [...prev, label]);\n    }\n  }\n\n  async function fetchProducts() {\n\n    console.log(\"Selected labels:\", selectedLabels);\n\n    let url = \"https://7kat3yi6ui.execute-api.eu-west-1.amazonaws.com/products\";\n\n    if (selectedLabels.length > 0) {\n      const selectedLabelNames = selectedLabels.map((label) => label.name);\n      url += `?labels=${selectedLabelNames.join(\",\")}`;\n    }\n\n    await fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        mode: \"cors\",\n      },\n    })\n      .then(async (response) => {\n        if (response.ok) {\n          const data = await response.json();\n          setProducts(data);\n          console.log(\"Products fetched successfully:\", data);\n        } else {\n          alert(\"Error fetching products\");\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n        alert(\"Error fetching products\");\n      });\n  }\n\n  async function fetchLabels() {\n    await fetch(\n      \"https://7kat3yi6ui.execute-api.eu-west-1.amazonaws.com/labels\",\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          mode: \"cors\",\n        },\n      }\n    )\n      .then(async (response) => {\n        if (response.ok) {\n          const data = await response.json();\n          setLabels(data);\n          console.log(\"Labels fetched successfully:\", data);\n        } else {\n          alert(\"Error fetching labels\");\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n        alert(\"Error fetching labels\");\n      });\n  }\n\n  useEffect(() => {\n    fetchProducts();\n    fetchLabels();\n  }, []);\n\n  useEffect(() => {\n    fetchProducts();\n  }, [selectedLabels]);\n\n  return (\n    <div>\n      <h1>View Products</h1>\n\n      <div className=\"labels-container\">\n        {labels.map((label) => {\n          const isSelected = selectedLabels.some(\n            (selectedLabel) => selectedLabel.name === label.name\n          );\n          return (\n            <div\n              className={`label${isSelected ? \" selected\" : \"\"}`}\n              onClick={() => handleLabelClick(label)}\n            >\n              {label.name}\n            </div>\n          );\n        })}\n      </div>\n\n      <div className=\"products-container\">\n        {products.map((product) => (\n          <ProductCard key={product.id} product={product} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default AddProduct;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}